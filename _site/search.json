[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data<-read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/TakeHome_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "The task is to use age-sex pyramids to reveal the demographic structure of SG at the planning area level, describe the step-by-step preparation, and interpret the observations revealed by the data visualization prepared.\nThe data source of visualization is Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022. The data are available under the page entitled Geographical distribution.\nHere are some notes about the data:\nPA - Planning Area\nSZ – Subzone\nAG - Age Group\nSex – Sex\nTOD - Type of Dwelling\nPop - Resident Count\nTime - Time / Period"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03.html",
    "title": "In-class Exercise",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are : tidyverse and ggiraph.\n\npacman::p_load(ggiraph,tidyverse)\n\nimporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data = exam_data,aes(x=MATHS)) +geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are : tidyverse and ggiraph.\n\npacman::p_load(ggiraph,tidyverse,readxl)\n\nImporting data\n\npop <- read_csv(\"data/respopagesextod2022.csv\")\n\nRead the head data\n\nhead(pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\n首先，我们将按性别和年龄计算新加坡总人口的频率计数。在下面的代码块中，dplyr包的group_by()用于按年龄和性别对订单进行分组。然后，使用dplyr的summarise ()来统计（即n()）居民的数量。\n\nfreq_pop <- pop %>%\n  group_by(`AG`, `Sex`,`PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA          Count\n  <chr>  <chr>   <chr>       <dbl>\n1 0_to_4 Females Ang Mo Kio   2480\n2 0_to_4 Females Bedok        4970\n3 0_to_4 Females Bishan       1320\n4 0_to_4 Females Boon Lay        0\n5 0_to_4 Females Bukit Batok  4400\n6 0_to_4 Females Bukit Merah  2800\n\n\n排序数据表\n默认情况下，tibble 数据框的值根据第一列的值排序。在这种情况下，值按年龄组的字母数字顺序排序。\n因此，我们将根据原始数据集中分配的分类年龄组对数据进行排序。此任务首先通过使用mutate()更改顺序执行，然后通过dplyr包的arrange()排序。\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop <- freq_pop %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n  \nsorted_pop\n\n# A tibble: 2,090 × 4\n   AG     Sex     PA                      Count\n   <fct>  <chr>   <chr>                   <dbl>\n 1 0_to_4 Females Ang Mo Kio               2480\n 2 0_to_4 Females Bedok                    4970\n 3 0_to_4 Females Bishan                   1320\n 4 0_to_4 Females Boon Lay                    0\n 5 0_to_4 Females Bukit Batok              4400\n 6 0_to_4 Females Bukit Merah              2800\n 7 0_to_4 Females Bukit Panjang            2730\n 8 0_to_4 Females Bukit Timah              1750\n 9 0_to_4 Females Central Water Catchment     0\n10 0_to_4 Females Changi                     60\n# … with 2,080 more rows\n\n\n\nPA_sorted_pop <- filter(sorted_pop,PA %in% c(\"Ang Mo Kio\",\"Bedok\",\"Bishan\",\"Boon Lay\",\"Woodlands\",\"Rochor\",\"Sengkang\",\"Queenstown\",\"Punggol\"))\nPA_sorted_pop\n\n# A tibble: 342 × 4\n   AG     Sex     PA         Count\n   <fct>  <chr>   <chr>      <dbl>\n 1 0_to_4 Females Ang Mo Kio  2480\n 2 0_to_4 Females Bedok       4970\n 3 0_to_4 Females Bishan      1320\n 4 0_to_4 Females Boon Lay       0\n 5 0_to_4 Females Punggol     6940\n 6 0_to_4 Females Queenstown  1810\n 7 0_to_4 Females Rochor       180\n 8 0_to_4 Females Sengkang    6900\n 9 0_to_4 Females Woodlands   5430\n10 0_to_4 Males   Ang Mo Kio  2530\n# … with 332 more rows\n\n\n\n3.2.3 绘制年龄-性别人口金字塔\n\n静态年龄性别人口金字塔\n使用ggplot2绘制了年龄-性别人口金字塔，如下所示：\n\ngeom_col()而不是geom_bar()用于创建条形图，因为我们不需要修改数据，并且希望条形的长度代表实际的人口统计数据。\nBase R 函数的ifelse()将 Male 居民的人口数转换为负数，以便他们的数据将绘制在金字塔的左侧。\nscale_x_continuous()用于修改 x 轴上的标签以提供更好的可读性。\n\np <- ggplot(PA_sorted_pop, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), \n                          y = AG, fill = Sex)) + \n  geom_col() +\n  scale_x_continuous(breaks = seq(-150000, 150000, 50000), \n                     labels = paste0(as.character(c(seq(150, 0, -50), seq(50, 150, 50))),\"k\")) +\n  labs (x = \"Population\", y = \"Age\", title='Singapore Age-Sex Population Pyramid 2021') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"lightblue\", \"Females\" = \"lightpink\"))+\n  facet_wrap(~ PA)\np\n\n\n\n\n\n\nlibrary(plotly)\nggplotly(p,session=\"knitr\")"
  }
]