[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data<-read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-class_Ex/In-class Exercise4/In-class Exercise 4.html",
    "href": "In-class_Ex/In-class Exercise4/In-class Exercise 4.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, readxl, ggstatsplot,performance, parameters, see, tidyverse)\n\n\nexam_data <-read_csv(\"data/Exam_data.csv\")\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x=GENDER,\n  y=MATHS,\n  type = \"p\",\n  messages=FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5)+\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03.html",
    "title": "In-class Exercise",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are : tidyverse and ggiraph.\n\npacman::p_load(ggiraph,tidyverse)\n\nimporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data = exam_data,aes(x=MATHS)) +geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/TakeHome_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "The task is to use age-sex pyramids to reveal the demographic structure of SG at the planning area level, describe the step-by-step preparation, and interpret the observations revealed by the data visualization prepared.\nThe data source of visualization is Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022. The data are available under the page entitled Geographical distribution.\nHere are some notes about the data:\nPA - Planning Area\nSZ – Subzone\nAG - Age Group\nSex – Sex\nTOD - Type of Dwelling\nPop - Resident Count\nTime - Time / Period"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html",
    "title": "Take Home Exercise 02",
    "section": "",
    "text": "Remaking peer’s original design by improving chart’s clarity and aesthetics and creating an alternative design if needed."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#original-design",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#original-design",
    "title": "Take Home Exercise 02",
    "section": "2.1 Original Design",
    "text": "2.1 Original Design\nThe original design is shown below:\n\n  As we all known, the task of Take-home exercise 1 is to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. The above design showed the demographic structure successfully. Yet, this design can be improved in terms of following criteria."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#clarity",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#clarity",
    "title": "Take Home Exercise 02",
    "section": "2.2 Clarity",
    "text": "2.2 Clarity\n\n(a) Graph Title\nThe graph title can deliver the information clearly. But I think it is a bit too long. Maybe can be shorter. For example, can name it as SG Age-Sex Population Pyramids. We don’t need to say again we choose nine area because we showed nine pyramids."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#b-axes-labeling",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#b-axes-labeling",
    "title": "Take Home Exercise 02",
    "section": "(b) Axes Labeling",
    "text": "(b) Axes Labeling\nThe design did not add the axes labels. It would bring some misunderstanding about the data. So I think we can add the “Age” on the left side and the “Population” on the bottom side. It also added the gender labels on the bottom side and I think it’s good because it can bring a clear information about the gender differences.\nFor every pyramid, it has been added the area name label, which is very clear to show the specific area’s situation."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#aesthetics",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#aesthetics",
    "title": "Take Home Exercise 02",
    "section": "2.3 Aesthetics",
    "text": "2.3 Aesthetics\n\n(a) Alignment- Graph Title\nIn my opinion, the title aligning the pyramid area would be better than aligning the left side of the view.\n\n\n(b) The texts of population amount\nWhen you point to one of the pyramids, it would show the amount of population automatically. So I think the text of the number can be removed.\n\n\n(c) The display sequence of pyramids\nThe take-home exercise 1 requires us to display the nine pyramids on one view by using trellis display but this design needs us to use the scrolling bar to see the whole view. It’s not really fit for the requirement."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#sketch-of-proposed-design",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#sketch-of-proposed-design",
    "title": "Take Home Exercise 02",
    "section": "2.4 Sketch of Proposed Design",
    "text": "2.4 Sketch of Proposed Design"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#step-by-step-description",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#step-by-step-description",
    "title": "Take Home Exercise 02",
    "section": "3.1 Step by step description",
    "text": "3.1 Step by step description\n1) Installing and loading R packages. Three packages will be installed and loaded. They are : ggiraph, tidyverse and readxl.\n\npacman::p_load(ggiraph,tidyverse,readxl)\n\n2) Importing data. Data import was accomplished using read_csv() of the readr package.\n\npop <- read_csv(\"data/respopagesextod2022.csv\")\n\n3) Read the head data:\n\nhead(pop)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022\n\n\n4) First, we need to calculate the frequency count of the total population in Singapore by gender(Sex), age(AG), and planning area(PA). In the code chunk, we can use group_by() to group the orders by age, gender, and planning area. Afrer that, we can use summarise() of dplyr package to compute the amount of residents.\n\nfreq_pop <- pop %>%\n  group_by(`AG`, `Sex`,`PA`) %>%\n  summarise('Count'= sum(`Pop`)) %>%\n  ungroup()\nhead(freq_pop)\n\n# A tibble: 6 × 4\n  AG     Sex     PA          Count\n  <chr>  <chr>   <chr>       <dbl>\n1 0_to_4 Females Ang Mo Kio   2480\n2 0_to_4 Females Bedok        4970\n3 0_to_4 Females Bishan       1320\n4 0_to_4 Females Boon Lay        0\n5 0_to_4 Females Bukit Batok  4400\n6 0_to_4 Females Bukit Merah  2800\n\n\n5) We need to sort the data based on the categorical age group assigned in the original dataset. We can use mutate() to change the order and then use arrange() of dplyr package to sort. And then display the hold table.\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsorted_pop <- freq_pop %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG)\n  \nsorted_pop\n\n# A tibble: 2,090 × 4\n   AG     Sex     PA                      Count\n   <fct>  <chr>   <chr>                   <dbl>\n 1 0_to_4 Females Ang Mo Kio               2480\n 2 0_to_4 Females Bedok                    4970\n 3 0_to_4 Females Bishan                   1320\n 4 0_to_4 Females Boon Lay                    0\n 5 0_to_4 Females Bukit Batok              4400\n 6 0_to_4 Females Bukit Merah              2800\n 7 0_to_4 Females Bukit Panjang            2730\n 8 0_to_4 Females Bukit Timah              1750\n 9 0_to_4 Females Central Water Catchment     0\n10 0_to_4 Females Changi                     60\n# … with 2,080 more rows\n\n\n6) Because the take-home exercise needs us to choose nine planning areas. So, base on the original design, I choose “Ang Mo Kio”, “Bukit Merah”, “Bukit Timah”, “Hougang”, “Jurong East”, “Kallang”, “Pasir Ris”, “Sengkang”, “Toa Payoh” nine planning areas. And then display the whole table of nine planning areas.\n\nPA_sorted_pop <- filter(sorted_pop,PA %in% c(\"Ang Mo Kio\",\"Bukit Merah\",\"Bukit Timah\",\"Hougang\",\"Jurong East\",\"Kallang\",\"Pasir Ris\",\"Sengkang\",\"Toa Payoh\"))\nPA_sorted_pop\n\n# A tibble: 342 × 4\n   AG     Sex     PA          Count\n   <fct>  <chr>   <chr>       <dbl>\n 1 0_to_4 Females Ang Mo Kio   2480\n 2 0_to_4 Females Bukit Merah  2800\n 3 0_to_4 Females Bukit Timah  1750\n 4 0_to_4 Females Hougang      4430\n 5 0_to_4 Females Jurong East  1130\n 6 0_to_4 Females Kallang      1810\n 7 0_to_4 Females Pasir Ris    2730\n 8 0_to_4 Females Sengkang     6900\n 9 0_to_4 Females Toa Payoh    2550\n10 0_to_4 Males   Ang Mo Kio   2530\n# … with 332 more rows"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#plot-age-sex-population-pyramid",
    "href": "Take-Home_Ex/TakeHome_Ex02/TakeHome_Ex02.html#plot-age-sex-population-pyramid",
    "title": "Take Home Exercise 02",
    "section": "3.1.1 Plot Age-Sex Population Pyramid",
    "text": "3.1.1 Plot Age-Sex Population Pyramid\nStatic Age-sex population pyramid\n1) Using ggplot2 to plot the age-sex population pyramid.\n2) Changed the color of the bar chart depending on the original design.\n\ngeom_col() used to create the bar chart.\nifelse() of Base R function was convert population count of Male residents to be negative, so that their data will be plotted on the left side of the pyramid.\nfacet_wrap() Used to display nine planing area’s pyramids on the one view .\nChanged the color to green for males and light-pink for females.\n\n\np <- ggplot(PA_sorted_pop, aes(x = ifelse(Sex == \"Males\", yes = -Count, no = Count), \n                          y = AG, fill = Sex)) + \n  geom_col() +\n  scale_x_continuous(breaks = seq(-150000, 150000, 50000), \n                     labels = paste0(as.character(c(seq(150, 0, -50), seq(50, 150, 50))),\"k\")) +\n  labs (x = \"Population\", y = \"Age\", title='Singapore Age-Sex Population Pyramid 2022') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"#7b8b6f\", \"Females\" = \"lightpink\"))+\n  facet_wrap(~ PA)\np\n\n\n\n\n\nIn order to convert the static pyramid to an interactive chart, we can use ggplotly() of the plotly library. After using this package, hoving your mouse on the bar, you can see the detail information of the different ages and genders. We also need to use fig.width and fig.height to adjust the height and width.\n\n\nlibrary(plotly)\nggplotly(p,session=\"knitr\")"
  },
  {
    "objectID": "Hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, gganimate, DT, tidyverse, patchwork)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nComparing ggplot2 and ggiraph codes\nThe original ggplot2 code chunk.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5, \n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              #<<\n    aes(tooltip = ID),                   #<<\n    stackgroups = TRUE,                  #<<\n    binwidth = 1,                        #<<\n    method = \"histodot\") +               #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  #<<\n  ggobj = p,                             #<<\n  width_svg = 6,                         #<<\n  height_svg = 6*0.618                   #<<   \n)                                        #<<\n\n\n\n\n\n\nexam_data$tooltip <- c(paste0(     #<<\n  \"Name = \", exam_data$ID,         #<<\n  \"\\n Class = \", exam_data$CLASS)) #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), #<<\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:blue;\" #<<\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #<<\n    opts_tooltip(    #<<\n      css = tooltip_css)) #<<\n)                                        \n\n\n\n\n\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem) #<<\n} #<<\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem) #<<\n} #<<\n\ngg_point <- ggplot(data=exam_data, \n                   aes(x = RACE),\n)+\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"light blue\"\n  )+\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        #<<\n    opts_hover(css = \"fill: #301085;\"),  #<<\n    opts_hover_inv(css = \"opacity:0.1;\") #<<\n  )                                      #<<  \n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "pacman::p_load(corrplot, tidyverse, ggstatsplot,corrgram, ellipse,ggcorrplot,  seriation, dendextend, heatmaply)\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npacman::p_load(ggtern, plotly, tidyverse,dplyr_col_modify())\n\nInstalling package into 'C:/Users/Jiajie/AppData/Local/R/win-library/4.2'\n(as 'lib' is unspecified)\n\n\nWarning: package 'dplyr_col_modify()' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.2/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'dplyr_col_modify()'\n\n\nWarning in pacman::p_load(ggtern, plotly, tidyverse, dplyr_col_modify()): Failed to install/load:\ndplyr_col_modify()\n\n\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  pivot_wider(names_from = AG, \n              values_from = Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html",
    "title": "TakeHome_Ex03",
    "section": "",
    "text": "In this take-home exercise, I need to uncover the salient patterns of the resale prices of public housing. We need to focus on 3-Room, 4-Room, and 5-room types. I would focus on different factors’ influence on resale price and after that, I would focus on analyzing the resale price from one type of house."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#creating-the-visualisation",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#creating-the-visualisation",
    "title": "TakeHome_Ex03",
    "section": "4. Creating the Visualisation",
    "text": "4. Creating the Visualisation\n4.1 I want to compare different house type’s resale_price’s median. But I need to decrease the influence of house size. So, I create one more column to store the average price/m² and named it AvgPrice.\n\nFlat_resale4 <- mutate(Flat_resale3,AvgPrice=resale_price/floor_area_sqm)\nFlat_resale4\n\n# A tibble: 24,372 × 13\n   year  months town       flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶\n   <chr> <chr>  <chr>      <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n 1 2022  01     ANG MO KIO 3 ROOM  320   ANG MO… 07 TO …      73 New Ge…    1977\n 2 2022  01     ANG MO KIO 3 ROOM  225   ANG MO… 07 TO …      67 New Ge…    1978\n 3 2022  01     ANG MO KIO 3 ROOM  331   ANG MO… 07 TO …      68 New Ge…    1981\n 4 2022  01     ANG MO KIO 3 ROOM  534   ANG MO… 07 TO …      82 New Ge…    1980\n 5 2022  01     ANG MO KIO 3 ROOM  578   ANG MO… 04 TO …      67 New Ge…    1980\n 6 2022  01     ANG MO KIO 3 ROOM  452   ANG MO… 01 TO …      83 New Ge…    1979\n 7 2022  01     ANG MO KIO 3 ROOM  560   ANG MO… 01 TO …      67 New Ge…    1980\n 8 2022  01     ANG MO KIO 3 ROOM  435   ANG MO… 04 TO …      67 New Ge…    1979\n 9 2022  01     ANG MO KIO 3 ROOM  435   ANG MO… 04 TO …      67 New Ge…    1979\n10 2022  01     ANG MO KIO 3 ROOM  560   ANG MO… 10 TO …      67 New Ge…    1980\n# … with 24,362 more rows, 3 more variables: remaining_lease <chr>,\n#   resale_price <dbl>, AvgPrice <dbl>, and abbreviated variable names\n#   ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date\n\n\n4.2 Two-sample mean test:\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of AvgPrice by house types.\n\nggbetweenstats(\n  data = Flat_resale4,\n  x =flat_type, \n  y =AvgPrice,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nFrom above chart, it is easy to find that 4-room’s AvgPrice is higher than others. It means in the same house size, 4-room house would more expensive than others and the 3-room house is more expensive than 5-room house.\n4.3 checking normality assumption between AvgPrice and storey_range.\n\nmodel1 <- lm(AvgPrice ~storey_range , data = Flat_resale4)\nmodel1\n\n\nCall:\nlm(formula = AvgPrice ~ storey_range, data = Flat_resale4)\n\nCoefficients:\n         (Intercept)  storey_range04 TO 06  storey_range07 TO 09  \n              5106.2                 261.4                 436.5  \nstorey_range10 TO 12  storey_range13 TO 15  storey_range16 TO 18  \n               579.2                 961.1                1408.3  \nstorey_range19 TO 21  storey_range22 TO 24  storey_range25 TO 27  \n              2216.9                2392.7                3195.6  \nstorey_range28 TO 30  storey_range31 TO 33  storey_range34 TO 36  \n              4190.4                4464.2                4694.2  \nstorey_range37 TO 39  storey_range40 TO 42  storey_range43 TO 45  \n              5026.1                5701.7                7022.4  \nstorey_range46 TO 48  storey_range49 TO 51  \n              7892.7                7858.3  \n\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n4.4 Oneway ANOVA Test: Do a ANOVA Test to verify that is there any difference in AvgPrice based on different storeys.\nH0: There is irrelevant between AvgPrice and storey_range.\nH1: There is relevant between AvgPrice and storey_range.\n\nggbetweenstats(\n  data = Flat_resale4,\n  x = storey_range, \n  y = AvgPrice,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\nWarning: Number of labels is greater than default palette color count.\n• Select another color `palette` (and/or `package`).\n\n\n\n\n\nFrom above result, we can see that P<0.05. So we can reject H0. So, AvgPrice depends on the floor. The height of the floor affects the average price.\n4.5 Exploring the relationship between resale_price and storey_range.\nIn order to explore more about the resale_price and storey_range. We try the Significant Test of Association .\n\nexam1 <- Flat_resale4 %>% \n  mutate(AvgPrice_bin = \n           cut(AvgPrice, \n               breaks = c(0,2000,4000,6000,8000))\n)\n\n\nggbarstats(exam1, \n           x = AvgPrice_bin, \n           y = storey_range)\n\n\n\n\nFrom above chart, we can see that before storey 37, the higher storey , the green color occupied more. Which means the higher storey, the higher AvgPrice."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#exploring-one-of-house-type-4-room-type.",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#exploring-one-of-house-type-4-room-type.",
    "title": "TakeHome_Ex03",
    "section": "5. Exploring one of house type: 4-Room type.",
    "text": "5. Exploring one of house type: 4-Room type.\nBecause this house type is very popular in SG so we want to explore more about this type.\n5.1 Data prepare: Filter out the 4-Room type data.\n\nFlat_resale5 <- filter(Flat_resale4,flat_type==\"4 ROOM\")\nFlat_resale5\n\n# A tibble: 11,311 × 13\n   year  months town       flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶\n   <chr> <chr>  <chr>      <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n 1 2022  01     ANG MO KIO 4 ROOM  438   ANG MO… 10 TO …      92 New Ge…    1979\n 2 2022  01     ANG MO KIO 4 ROOM  556   ANG MO… 13 TO …      92 New Ge…    1980\n 3 2022  01     ANG MO KIO 4 ROOM  419   ANG MO… 07 TO …      99 New Ge…    1979\n 4 2022  01     ANG MO KIO 4 ROOM  466   ANG MO… 04 TO …      93 New Ge…    1984\n 5 2022  01     ANG MO KIO 4 ROOM  472   ANG MO… 01 TO …      92 New Ge…    1979\n 6 2022  01     ANG MO KIO 4 ROOM  405   ANG MO… 01 TO …      92 New Ge…    1979\n 7 2022  01     ANG MO KIO 4 ROOM  547   ANG MO… 01 TO …      92 New Ge…    1981\n 8 2022  01     ANG MO KIO 4 ROOM  415   ANG MO… 01 TO …      92 New Ge…    1979\n 9 2022  01     ANG MO KIO 4 ROOM  324   ANG MO… 04 TO …      98 New Ge…    1978\n10 2022  01     ANG MO KIO 4 ROOM  121   ANG MO… 10 TO …      92 New Ge…    1978\n# … with 11,301 more rows, 3 more variables: remaining_lease <chr>,\n#   resale_price <dbl>, AvgPrice <dbl>, and abbreviated variable names\n#   ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date\n\n\n5.2 The median of resale_price in different towns.\nIn order to explore the price in different towns, we need to group by every town and calculate the median of resale_price:\n\nFlat_resale6 <- Flat_resale5 %>%\n                group_by(town) %>%\n                summarize(median_price = median(resale_price))\nFlat_resale6\n\n# A tibble: 26 × 2\n   town          median_price\n   <chr>                <dbl>\n 1 ANG MO KIO          513000\n 2 BEDOK               470000\n 3 BISHAN              640000\n 4 BUKIT BATOK         495000\n 5 BUKIT MERAH         750000\n 6 BUKIT PANJANG       470000\n 7 BUKIT TIMAH         618444\n 8 CENTRAL AREA        849044\n 9 CHOA CHU KANG       488000\n10 CLEMENTI            660000\n# … with 16 more rows\n\n\n\nggplot(data=Flat_resale6,aes(x=reorder(town,median_price),y=median_price))+\n      geom_bar(stat = \"identity\")\n\n\n\n\nFrom above data and chart, we can find that some towns have a really high median of resale_price, although all of them are 4-room house. We can explore step further.\n5.3 Exploring the relationship between the resale_prize and floor_area_sqm.\nWe want to draw the scatter plot to explore the relationship .\n\nggplot(data=Flat_resale5, aes(x=floor_area_sqm, y=resale_price)) + geom_point(size=2,color=\"red\")\n\n\n\n\nFrom above scatter plot, we can’t see there is any correlation . So we do not need to explore for next steps.\n5.4 Visualizing the uncertainty of point estimates based on the town.\n\nmy_sum <- Flat_resale5 %>%\n  group_by(town) %>%\n  summarise(\n    n=n(),\n    mean=mean(resale_price),\n    sd=sd(resale_price)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    town \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    ANG MO KIO \n    305 \n    599339.7 \n    172944.64 \n    9919.055 \n  \n  \n    BEDOK \n    462 \n    508590.4 \n    101857.56 \n    4743.979 \n  \n  \n    BISHAN \n    206 \n    640889.7 \n    103639.45 \n    7238.493 \n  \n  \n    BUKIT BATOK \n    362 \n    525035.7 \n    101134.38 \n    5322.862 \n  \n  \n    BUKIT MERAH \n    358 \n    716379.4 \n    154082.78 \n    8154.925 \n  \n  \n    BUKIT PANJANG \n    462 \n    480776.2 \n    54351.37 \n    2531.396 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=town, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=town, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          resale_price score by rac\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#the-salient-pattern",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#the-salient-pattern",
    "title": "TakeHome_Ex03",
    "section": "6. The salient pattern",
    "text": "6. The salient pattern\nHere is a conclusion that I learn from this analysis practice.\na. In the same area of house, the price of 4-room type house would be more expensive than other types.\nb.The storey would influence the price of the house. Generally, the higher storey of the house that need to pay more money to buy.\nc. In SG, Central area and queen’s town’s houses are more expensive than other district， expecially the Central area. the resale price in most of areas are between 490000-510000.\nd. There is no obvious correlation between resale_prize and floor_area_sqm, which is unexpected.\ne. From the standard error chart, we can know that those are the same type house but there are some price gaps."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#the-data",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#the-data",
    "title": "TakeHome_Ex03",
    "section": "2.The data",
    "text": "2.The data\nResale flat princes based on registration date from Jan-2017 onwards should be used to prepare the analytical visualization. It is available at Data.gov.sg."
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#import-the-dataset-and-prepare-the-data",
    "href": "Take-Home_Ex/TakeHome_Ex03/TakeHome_Ex03.html#import-the-dataset-and-prepare-the-data",
    "title": "TakeHome_Ex03",
    "section": "3. Import the dataset and prepare the data",
    "text": "3. Import the dataset and prepare the data\n3.1 Installing and loading the required libraries\n\npacman::p_load(tidyverse, patchwork, ggthemes, hrbrthemes, ggrepel, ggiraph, ggstatsplot, PMCMRplus, performance, parameters, see, plotly, factoextra,ggplot2,forcats,dendextend,heatmaply,pheatmap,rmarkdown)\n\n3.2 Importing the dataset and preparing the data\n\nFlat_resale <- read_csv(\"data/2017-2022.csv\")\n\nRows: 146783 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): month, town, flat_type, block, street_name, storey_range, flat_mode...\ndbl (3): floor_area_sqm, lease_commence_date, resale_price\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nFlat_resale\n\n# A tibble: 146,783 × 11\n   month   town    flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n   <chr>   <chr>   <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n 1 2017-01 ANG MO… 2 ROOM  406   ANG MO… 10 TO …      44 Improv…    1979 61 yea…\n 2 2017-01 ANG MO… 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978 60 yea…\n 3 2017-01 ANG MO… 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n 4 2017-01 ANG MO… 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980 62 yea…\n 5 2017-01 ANG MO… 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n 6 2017-01 ANG MO… 3 ROOM  150   ANG MO… 01 TO …      68 New Ge…    1981 63 yea…\n 7 2017-01 ANG MO… 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979 61 yea…\n 8 2017-01 ANG MO… 3 ROOM  218   ANG MO… 04 TO …      67 New Ge…    1976 58 yea…\n 9 2017-01 ANG MO… 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979 61 yea…\n10 2017-01 ANG MO… 3 ROOM  571   ANG MO… 01 TO …      67 New Ge…    1979 61 yea…\n# … with 146,773 more rows, 1 more variable: resale_price <dbl>, and\n#   abbreviated variable names ¹​flat_type, ²​street_name, ³​storey_range,\n#   ⁴​floor_area_sqm, ⁵​flat_model, ⁶​lease_commence_date, ⁷​remaining_lease\n\n\n3.3 Because we need to focus on 3-room, 4-room, and 5-room house type so I fiter out the data that we need.\n\nFlat_resale1 <- filter(Flat_resale,flat_type==\"3 ROOM\"|flat_type==\"4 ROOM\"|flat_type==\"5 ROOM\")\n\n\nFlat_resale1\n\n# A tibble: 132,977 × 11\n   month   town    flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n   <chr>   <chr>   <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n 1 2017-01 ANG MO… 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978 60 yea…\n 2 2017-01 ANG MO… 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n 3 2017-01 ANG MO… 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980 62 yea…\n 4 2017-01 ANG MO… 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n 5 2017-01 ANG MO… 3 ROOM  150   ANG MO… 01 TO …      68 New Ge…    1981 63 yea…\n 6 2017-01 ANG MO… 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979 61 yea…\n 7 2017-01 ANG MO… 3 ROOM  218   ANG MO… 04 TO …      67 New Ge…    1976 58 yea…\n 8 2017-01 ANG MO… 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979 61 yea…\n 9 2017-01 ANG MO… 3 ROOM  571   ANG MO… 01 TO …      67 New Ge…    1979 61 yea…\n10 2017-01 ANG MO… 3 ROOM  534   ANG MO… 01 TO …      68 New Ge…    1980 62 yea…\n# … with 132,967 more rows, 1 more variable: resale_price <dbl>, and\n#   abbreviated variable names ¹​flat_type, ²​street_name, ³​storey_range,\n#   ⁴​floor_area_sqm, ⁵​flat_model, ⁶​lease_commence_date, ⁷​remaining_lease\n\n\n3.4 The task require us to analysis 2022’s data so I filter 2022’s data. The following steps can filter out the data that we need.\n\nFlat_resale2 <- Flat_resale1 %>% \n  separate(month, c(\"year\", \"months\"), \"-\")\nFlat_resale2\n\n# A tibble: 132,977 × 12\n   year  months town       flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶\n   <chr> <chr>  <chr>      <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n 1 2017  01     ANG MO KIO 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978\n 2 2017  01     ANG MO KIO 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980\n 3 2017  01     ANG MO KIO 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980\n 4 2017  01     ANG MO KIO 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980\n 5 2017  01     ANG MO KIO 3 ROOM  150   ANG MO… 01 TO …      68 New Ge…    1981\n 6 2017  01     ANG MO KIO 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979\n 7 2017  01     ANG MO KIO 3 ROOM  218   ANG MO… 04 TO …      67 New Ge…    1976\n 8 2017  01     ANG MO KIO 3 ROOM  447   ANG MO… 04 TO …      68 New Ge…    1979\n 9 2017  01     ANG MO KIO 3 ROOM  571   ANG MO… 01 TO …      67 New Ge…    1979\n10 2017  01     ANG MO KIO 3 ROOM  534   ANG MO… 01 TO …      68 New Ge…    1980\n# … with 132,967 more rows, 2 more variables: remaining_lease <chr>,\n#   resale_price <dbl>, and abbreviated variable names ¹​flat_type,\n#   ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date\n\n\n\nFlat_resale3 <- filter(Flat_resale2,year==\"2022\")\nFlat_resale3\n\n# A tibble: 24,372 × 12\n   year  months town       flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶\n   <chr> <chr>  <chr>      <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n 1 2022  01     ANG MO KIO 3 ROOM  320   ANG MO… 07 TO …      73 New Ge…    1977\n 2 2022  01     ANG MO KIO 3 ROOM  225   ANG MO… 07 TO …      67 New Ge…    1978\n 3 2022  01     ANG MO KIO 3 ROOM  331   ANG MO… 07 TO …      68 New Ge…    1981\n 4 2022  01     ANG MO KIO 3 ROOM  534   ANG MO… 07 TO …      82 New Ge…    1980\n 5 2022  01     ANG MO KIO 3 ROOM  578   ANG MO… 04 TO …      67 New Ge…    1980\n 6 2022  01     ANG MO KIO 3 ROOM  452   ANG MO… 01 TO …      83 New Ge…    1979\n 7 2022  01     ANG MO KIO 3 ROOM  560   ANG MO… 01 TO …      67 New Ge…    1980\n 8 2022  01     ANG MO KIO 3 ROOM  435   ANG MO… 04 TO …      67 New Ge…    1979\n 9 2022  01     ANG MO KIO 3 ROOM  435   ANG MO… 04 TO …      67 New Ge…    1979\n10 2022  01     ANG MO KIO 3 ROOM  560   ANG MO… 10 TO …      67 New Ge…    1980\n# … with 24,362 more rows, 2 more variables: remaining_lease <chr>,\n#   resale_price <dbl>, and abbreviated variable names ¹​flat_type,\n#   ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date"
  },
  {
    "objectID": "Hands-on_Ex/hands-on_Ex05/hands-on_Ex05(a).html",
    "href": "Hands-on_Ex/hands-on_Ex05/hands-on_Ex05(a).html",
    "title": "hands-on_Ex05(a)",
    "section": "",
    "text": "pacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\nWarning: The following aesthetics were dropped during statistical transformation: colour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))\n\n\n\n\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)"
  },
  {
    "objectID": "Hands-on_Ex/hands-on_Ex05/hands-on_Ex05.html",
    "href": "Hands-on_Ex/hands-on_Ex05/hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(tidyverse,ggtern,dplyr,plotly)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  pivot_wider(names_from = AG, \n              values_from = Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"pink\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"green\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"red\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode"
  },
  {
    "objectID": "Take-Home_Ex/TakeHome_Ex04/TakeHome_Ex04.html",
    "href": "Take-Home_Ex/TakeHome_Ex04/TakeHome_Ex04.html",
    "title": "TakeHome_Ex04",
    "section": "",
    "text": "pacman::p_load(ggplot2, tidyverse,readxl)\n\n\ndata1 <- read_excel(\"data/outputFile.xlsx\",sheet='T1',range = 'A10:UT129')\ndata1\n\n# A tibble: 119 × 566\n   `Data Series` 2023 …¹ 2022 …² 2022 …³ 2022 …⁴ 2022 …⁵ 2022 …⁶ 2022 …⁷ 2022 …⁸\n   <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Total Mercha…  4.44e7  4.99e7  5.07e7  5.32e7  5.58e7  5.85e7  6.10e7  5.96e7\n 2 America (Mil…  6.27e3  6.90e3  7.53e3  7.67e3  8.00e3  8.63e3  7.88e3  8.02e3\n 3 Asia (Millio…  3.02e4  3.36e4  3.47e4  3.61e4  3.77e4  4.09e4  4.32e4  4.25e4\n 4 Europe (Mill…  6.43e3  7.54e3  7.24e3  7.48e3  8.17e3  7.43e3  8.30e3  7.30e3\n 5 Oceania (Mil…  9.83e2  1.40e3  6.64e2  1.33e3  1.54e3  9.36e2  1.06e3  1.14e3\n 6 Africa (Mill…  5.41e2  4.15e2  4.84e2  5.90e2  3.95e2  5.51e2  5.74e2  6.76e2\n 7 European Uni…  4.58e3  5.06e3  4.96e3  4.69e3  5.15e3  5.13e3  5.23e3  5.14e3\n 8 Belgium (Tho…  9.41e4  1.04e5  1.22e5  8.88e4  2.16e5  1.33e5  2.25e5  1.15e5\n 9 Denmark (Tho…  5.75e4  6.77e4  6.74e4  6.37e4  6.18e4  1.26e5  5.58e4  5.10e4\n10 France (Thou…  1.61e6  1.54e6  1.56e6  1.49e6  1.66e6  1.62e6  1.56e6  1.54e6\n# … with 109 more rows, 557 more variables: `2022 May` <dbl>, `2022 Apr` <dbl>,\n#   `2022 Mar` <dbl>, `2022 Feb` <dbl>, `2022 Jan` <dbl>, `2021 Dec` <dbl>,\n#   `2021 Nov` <dbl>, `2021 Oct` <dbl>, `2021 Sep` <dbl>, `2021 Aug` <dbl>,\n#   `2021 Jul` <dbl>, `2021 Jun` <dbl>, `2021 May` <dbl>, `2021 Apr` <dbl>,\n#   `2021 Mar` <dbl>, `2021 Feb` <dbl>, `2021 Jan` <dbl>, `2020 Dec` <dbl>,\n#   `2020 Nov` <dbl>, `2020 Oct` <dbl>, `2020 Sep` <dbl>, `2020 Aug` <dbl>,\n#   `2020 Jul` <dbl>, `2020 Jun` <dbl>, `2020 May` <dbl>, `2020 Apr` <dbl>, …\n\n\n\ndata1A <- data1 %>% \n  separate(\"Data Series\", c(\"Place\", \"money\"), \" \")\n\nWarning: Expected 2 pieces. Additional pieces discarded in 119 rows [1, 2, 3,\n4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\ndata1A\n\n# A tibble: 119 × 567\n   Place   money 2023 …¹ 2022 …² 2022 …³ 2022 …⁴ 2022 …⁵ 2022 …⁶ 2022 …⁷ 2022 …⁸\n   <chr>   <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Total   Merc…  4.44e7  4.99e7  5.07e7  5.32e7  5.58e7  5.85e7  6.10e7  5.96e7\n 2 America (Mil…  6.27e3  6.90e3  7.53e3  7.67e3  8.00e3  8.63e3  7.88e3  8.02e3\n 3 Asia    (Mil…  3.02e4  3.36e4  3.47e4  3.61e4  3.77e4  4.09e4  4.32e4  4.25e4\n 4 Europe  (Mil…  6.43e3  7.54e3  7.24e3  7.48e3  8.17e3  7.43e3  8.30e3  7.30e3\n 5 Oceania (Mil…  9.83e2  1.40e3  6.64e2  1.33e3  1.54e3  9.36e2  1.06e3  1.14e3\n 6 Africa  (Mil…  5.41e2  4.15e2  4.84e2  5.90e2  3.95e2  5.51e2  5.74e2  6.76e2\n 7 Europe… Union  4.58e3  5.06e3  4.96e3  4.69e3  5.15e3  5.13e3  5.23e3  5.14e3\n 8 Belgium (Tho…  9.41e4  1.04e5  1.22e5  8.88e4  2.16e5  1.33e5  2.25e5  1.15e5\n 9 Denmark (Tho…  5.75e4  6.77e4  6.74e4  6.37e4  6.18e4  1.26e5  5.58e4  5.10e4\n10 France  (Tho…  1.61e6  1.54e6  1.56e6  1.49e6  1.66e6  1.62e6  1.56e6  1.54e6\n# … with 109 more rows, 557 more variables: `2022 May` <dbl>, `2022 Apr` <dbl>,\n#   `2022 Mar` <dbl>, `2022 Feb` <dbl>, `2022 Jan` <dbl>, `2021 Dec` <dbl>,\n#   `2021 Nov` <dbl>, `2021 Oct` <dbl>, `2021 Sep` <dbl>, `2021 Aug` <dbl>,\n#   `2021 Jul` <dbl>, `2021 Jun` <dbl>, `2021 May` <dbl>, `2021 Apr` <dbl>,\n#   `2021 Mar` <dbl>, `2021 Feb` <dbl>, `2021 Jan` <dbl>, `2020 Dec` <dbl>,\n#   `2020 Nov` <dbl>, `2020 Oct` <dbl>, `2020 Sep` <dbl>, `2020 Aug` <dbl>,\n#   `2020 Jul` <dbl>, `2020 Jun` <dbl>, `2020 May` <dbl>, `2020 Apr` <dbl>, …\n\n\n\n  data1A |>\n  select(Place:\"2020 Jan\") |>\n  filter(money==\"(Million\") |>\n  head(n=5) |>\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlace\nmoney\n2023 Jan\n2022 Dec\n2022 Nov\n2022 Oct\n2022 Sep\n2022 Aug\n2022 Jul\n2022 Jun\n2022 May\n2022 Apr\n2022 Mar\n2022 Feb\n2022 Jan\n2021 Dec\n2021 Nov\n2021 Oct\n2021 Sep\n2021 Aug\n2021 Jul\n2021 Jun\n2021 May\n2021 Apr\n2021 Mar\n2021 Feb\n2021 Jan\n2020 Dec\n2020 Nov\n2020 Oct\n2020 Sep\n2020 Aug\n2020 Jul\n2020 Jun\n2020 May\n2020 Apr\n2020 Mar\n2020 Feb\n2020 Jan\n\n\n\n\nAmerica\n(Million\n6267.4\n6901.5\n7529.4\n7666.4\n7995.9\n8633.8\n7879.7\n8024.0\n8521.1\n7822.1\n7176.1\n5385.2\n5850.9\n6261.1\n6127.4\n6027.6\n5631.6\n5750.1\n5728.6\n5457.4\n5191.8\n6195.9\n5303.5\n4164.2\n4580.0\n4676.4\n4588.2\n4869.7\n4886.4\n4132.0\n4667.3\n4686.2\n4259.0\n5183.5\n5910.8\n5314.1\n5844.1\n\n\nAsia\n(Million\n30174.0\n33611.7\n34733.7\n36120.9\n37696.3\n40911.9\n43214.2\n42507.2\n40534.7\n38735.7\n42199.9\n31611.3\n35014.0\n39140.3\n35949.6\n33552.7\n32533.4\n31492.5\n31645.0\n31021.0\n28497.2\n30623.1\n31367.8\n26122.6\n27413.7\n28200.4\n25844.9\n26127.9\n27823.2\n26052.3\n26767.4\n24779.3\n21718.9\n24534.5\n26783.6\n26588.1\n27128.1\n\n\nEurope\n(Million\n6427.8\n7541.8\n7242.8\n7475.9\n8167.6\n7433.2\n8300.5\n7300.2\n7030.8\n7407.2\n7203.2\n6479.0\n7821.6\n7586.3\n6872.0\n6714.8\n6882.1\n5919.4\n6919.2\n7011.2\n6563.5\n6740.5\n8964.0\n5403.7\n5749.6\n6087.4\n6133.5\n6285.4\n5316.9\n5225.0\n5475.3\n4960.7\n4629.0\n5150.6\n6333.3\n6209.6\n6859.7\n\n\nOceania\n(Million\n983.3\n1399.9\n664.4\n1329.8\n1544.6\n935.9\n1060.6\n1141.8\n1164.7\n1559.1\n863.9\n814.4\n810.4\n744.8\n994.1\n1021.2\n599.8\n744.0\n1201.2\n890.1\n1001.7\n1030.5\n1131.0\n1134.7\n705.5\n540.9\n1412.8\n577.3\n477.7\n586.5\n493.1\n456.4\n441.8\n637.6\n845.9\n694.7\n819.7\n\n\nAfrica\n(Million\n541.1\n414.9\n483.6\n589.9\n395.0\n551.2\n574.4\n675.9\n352.9\n591.9\n636.9\n668.5\n529.9\n616.8\n731.8\n628.8\n333.4\n808.4\n613.8\n660.2\n305.4\n579.6\n902.2\n818.5\n579.9\n649.4\n498.6\n313.5\n297.2\n476.5\n440.6\n238.2\n409.6\n372.6\n559.4\n666.1\n528.6"
  }
]